{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomih\\\\OneDrive\\\\Documents(1)\\\\Otthoni\\\\BDO\\\\user-task-service\\\\frontend\\\\src\\\\components\\\\TaskTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskTable = ({\n  tasks,\n  fetchUsers\n}) => {\n  _s();\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [editedTask, setEditedTask] = useState({\n    title: '',\n    description: ''\n  });\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:8081/api/tasks/${taskId}`);\n      fetchUsers(); // Refresh the user list after task deletion\n    } catch (error) {\n      console.error('Error deleting task', error);\n    }\n  };\n  const handleEditClick = task => {\n    setEditTaskId(task.id);\n    setEditedTask({\n      title: task.title,\n      description: task.description\n    });\n  };\n  const handleSaveClick = async taskId => {\n    try {\n      const taskPayload = {\n        title: editedTask.title,\n        description: editedTask.description,\n        userId: tasks.find(task => task.id === taskId).user.id // Assuming tasks have a user field\n      };\n      await axios.put(`http://localhost:8081/api/tasks/${taskId}`, taskPayload);\n      setEditTaskId(null);\n      fetchUsers(); // Refresh the user list after task update\n    } catch (error) {\n      console.error('Error updating task', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedTask(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deleted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              value: editedTask.title,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this) : task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              value: editedTask.description,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this) : task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.deleted.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [editTaskId === task.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => handleSaveClick(task.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => handleEditClick(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTask(task.id),\n              disabled: task.deleted,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskTable, \"fJUB/XG324dSj68FJcEagfA6ong=\");\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TaskTable","tasks","fetchUsers","_s","editTaskId","setEditTaskId","editedTask","setEditedTask","title","description","deleteTask","taskId","delete","error","console","handleEditClick","task","id","handleSaveClick","taskPayload","userId","find","user","put","handleChange","e","name","value","target","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","type","onChange","deleted","toString","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tomih/OneDrive/Documents(1)/Otthoni/BDO/user-task-service/frontend/src/components/TaskTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskTable = ({ tasks, fetchUsers }) => {\r\n    const [editTaskId, setEditTaskId] = useState(null);\r\n    const [editedTask, setEditedTask] = useState({ title: '', description: '' });\r\n\r\n    const deleteTask = async (taskId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8081/api/tasks/${taskId}`);\r\n            fetchUsers(); // Refresh the user list after task deletion\r\n        } catch (error) {\r\n            console.error('Error deleting task', error);\r\n        }\r\n    };\r\n\r\n    const handleEditClick = (task) => {\r\n        setEditTaskId(task.id);\r\n        setEditedTask({ title: task.title, description: task.description });\r\n    };\r\n\r\n    const handleSaveClick = async (taskId) => {\r\n        try {\r\n            const taskPayload = {\r\n                title: editedTask.title,\r\n                description: editedTask.description,\r\n                userId: tasks.find(task => task.id === taskId).user.id // Assuming tasks have a user field\r\n            };\r\n            await axios.put(`http://localhost:8081/api/tasks/${taskId}`, taskPayload);\r\n            setEditTaskId(null);\r\n            fetchUsers(); // Refresh the user list after task update\r\n        } catch (error) {\r\n            console.error('Error updating task', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEditedTask(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Tasks</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Deleted</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tasks.map(task => (\r\n                        <tr key={task.id}>\r\n                            <td>{task.id}</td>\r\n                            <td>\r\n                                {editTaskId === task.id ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"title\"\r\n                                        value={editedTask.title}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                ) : (\r\n                                    task.title\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {editTaskId === task.id ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"description\"\r\n                                        value={editedTask.description}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                ) : (\r\n                                    task.description\r\n                                )}\r\n                            </td>\r\n                            <td>{task.deleted.toString()}</td>\r\n                            <td>\r\n                                {editTaskId === task.id ? (\r\n                                    <button className=\"btn btn-primary\" onClick={() => handleSaveClick(task.id)}>Save</button>\r\n                                ) : (\r\n                                    <button className=\"btn btn-secondary\" onClick={() => handleEditClick(task)}>Edit</button>\r\n                                )}\r\n                                <button className=\"btn btn-danger\" onClick={() => deleteTask(task.id)} disabled={task.deleted}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}